= Curent milestone: 0.1

== Features
* Design and imlement an improved Plasma::QuerySyntax that is useful for:
    * run time help / hints for the user
    * automatic query construction
    * pre-threading query filtering
* QueryMatch execution
    * Learning: record chosen QueryMatches, weight future matches with this information
* Design and implement an improved (relative to krunner) "single runner" mode
* Runners advertise what kind of matches they return (source, type, ..?)
* Pre-threading runner filtering
    * Based on:
        * Runner's advertised matching types
        * QuerySyntax
    * Controlled by:
        * A MatchType filter (from user, or UI component)
        * Query pre-processing?
* icons for QueryMatches

== Improvements
* Clear all TODOs/FIXMEs in code
* Improve RunnerSessionData::updateMatches
* Implement proper merging in setMatches
* QueryMatch::isSearchTerm should allow setting whether to only run against same runner that generated it (relies on a single-runner mode)
* RunnerSessionDAta: Use Q[Explicitly]SharedDataPointer for the dptr instead of doing ref counting manually

== Bugfixes
* Ensure all threads cleaned up before exit

= Next milestone: 0.2

= Unscheduled
* Query pre-processing (similar to Plasma::RunnerContext::Private::determineType)
    * this may actually be unecessary, or at least not as useful as was expected when krunner was in devel?
* Actions on matches
    * Could be done using QueryMatch::isSearchTerm to refine search?